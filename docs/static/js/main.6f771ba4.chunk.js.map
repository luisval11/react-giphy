{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","image","images","downsized_medium","GifGridItem","ima","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"0MAIaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EAEPC,mBAAS,IAFF,mBAEpCC,EAFoC,KAExBC,EAFwB,KAgB3C,OAAQ,sBAAMC,SATO,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAId,SACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAoB/BZ,EAAYe,WAAY,CACpBd,c,OAAee,EAAUC,KAAKC,Y,oCC9BrBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXC,MAAOH,EAAII,OAAOC,iBAAiBb,QATxB,kBAYZM,GAZY,4CAAH,sDCEPQ,EAAc,SAACC,GACxB,OACI,qBAAIC,UAAU,yCAAd,UACI,qBAAKC,IAAKF,EAAIJ,MAAOO,IAAKH,EAAIL,QAC9B,4BAAIK,EAAIL,YCAPS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EAEZlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KActC,OAPAC,qBAAW,WACP1B,EAAQC,GAAU0B,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACpCjB,KAAMoB,EACNL,SAAS,SAEd,CAACtB,IAEGuB,EDTwBK,CAAa5B,GAAhCc,EAFuB,EAE5BP,KAAae,EAFe,EAEfA,QAEpB,OACI,qCACCA,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,oBAAIA,UAAU,oCAAd,SAAmDlB,IACnD,qBAAKkB,UAAU,YAAf,SAEQJ,EAAOL,KAAI,SAAAC,GACP,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEbpCkB,EAAe,WAAK,MAEO/C,mBAAS,CAAC,cAFjB,mBAEtBgD,EAFsB,KAEVjD,EAFU,KAQ7B,OAAQ,qCACJ,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQiD,EAAWrB,KAAI,SAAAsB,GACX,OAAO,cAAC,EAAD,CAAmB/B,SAAU+B,GAAfA,Y,MCfzCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6f771ba4.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Se extraen las categorias de las props que se han pasado por el componente superior\r\nexport const AddCategory = ({setCategories}) =>{\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [ inputValue, ...cats, ] );\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    return (<form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>);\r\n}\r\n\r\nAddCategory.protoTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Ib5xB1VRK8NHC6Z8yctmr6BWrhCDIUjI`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id:  img.id,\r\n            title: img.title,\r\n            image: img.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = (ima) => {\r\n    return (\r\n        <li className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ima.image} alt={ima.title}></img>\r\n            <p>{ima.title}</p>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport {GifGridItem} from '../components/GifGridItem';\r\n\r\n//rafc--> La salud para crear componentes\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        {loading && <p className=\"animate__animated animate__flash\">LOADING...</p>}\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map(img => {\r\n                    return <GifGridItem key={img.id} {...img}></GifGridItem>\r\n                })\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category).then(imgs => setState({\r\n            data: imgs,\r\n            loading: false\r\n        }));\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n    //Si el useState está vacío, error feo --> Warning: A component is changing a controlled input to be uncontrolled.\r\n    const [categories, setCategories] = useState(['One Piece']);\r\n\r\n    const handleAdd = () => {\r\n        setCategories([...categories, 'HunterXHunter']);\r\n    }\r\n    \r\n    return (<>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}></AddCategory>\r\n        <hr/>\r\n        \r\n        <ol>\r\n            {\r\n                categories.map(cat => {\r\n                    return <GifGrid key={cat} category={cat}/>\r\n                })\r\n            }\r\n        </ol>\r\n    </>);\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}